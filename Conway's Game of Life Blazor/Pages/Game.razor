@page "/"

<h1>Hello world</h1>
<h1>@gameGrid.Length</h1>

@for (int i = 0; i < grid; i++)
{
    <tr>
        @for (int j = 0; j < grid; j++)
        {
            if (gameGrid[i, j].IsAlive)
            {
                color = "red";
            }
            else
            {
                color = "black";
            }
            <td style="border: 1px solid black; padding: 5px; background-color: @color"></td>
        }
    </tr>
}
<button @onclick="Update">Update</button>

@code 
{
    Cell[,] gameGrid = new Cell[grid, grid];
    string color = "";

    private static int grid = 30;
    private bool IsRunning;

    public record Cell
    {
        public int Row { get; set; }
        public int Col { get; set; }
        public bool IsAlive { get; set; }
        public bool NextState { get; set; }
    }

    //On Initialization we fill our cells list
    protected override void OnInitialized()
    {  
        //Fill the matrix of cells
        for(int i = 0; i < grid; i++)
        {
            for (int j = 0; j < grid; j++)
            {
                Cell cell = new Cell
                {
                     Row = i,
                     Col = j
                };
                gameGrid[i, j] = cell;
            }
        }
    }
    private void StartGame()
    {

    }
    private void GenerateNextState()
    {

    }
    private void AliveNeighbours()
    {

    }
    private void Update()
    {
        foreach(var cell in gameGrid)
        {
            cell.IsAlive = false;
        }
        foreach (var cell in gameGrid)
        {
            Random random = new Random();
            if (random.Next(100) >= 85)
            {
                cell.IsAlive = true;
            }
        }
    }
}